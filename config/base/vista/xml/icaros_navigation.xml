<!-- 
SPDX-FileCopyrightText: German Aerospace Center (DLR) <cosmoscout@dlr.de>
SPDX-License-Identifier: MIT
This data flow net graph defines the interaction configuration for the ICAROS device. 
-->
<?xml version="1.0" encoding="utf-8"?>
<module>
    <nodespace></nodespace>
    <graph>


        <!-- Keyboard-->
         <node name="key_calibrate" type="KeyCallback">
            <param name="key" value="c"/>
            <param name="description" value="calibration key"/>
        </node>

        <!-- calibrate-->
        <node name="key_calibrate_LatestUpdate" type="LatestUpdate[bool]"/>
        <node name="calibration_condition" type="ConditionalRoute"/>
        <node name="calibration" type="Substract[VistaVector3D]"/>

        <!-- time input -->
        <node name="timer" type="Timer" />

        <!-- icaros device input -->
        <node name="icaros" type="DriverSensor">
            <param name="sensor_index" value="0" />
            <param name="driver" value="ICAROS" />
        </node>

        <node name="history" type="HistoryProject">
            <param name="project">ORIENTATION, BUTTON_1, BUTTON_2, BUTTON_3, BUTTON_4</param>
        </node>

        <node name="sampling_mode" type="ConstantValue[int]">
            <param name="value" value="0" />
        </node>

        <!-- observer output -->
        <node name="observer" type="ObserverNavigationNode">
            <param name="max_linear_speed" value="10, 10, 10" />
            <param name="max_angular_speed" value="2" />
            <param name="angular_deceleration" value="1" />
            <param name="linear_acceleration" value="3" />
            <param name="linear_deceleration" value="1" />
            <param name="prevent_navigation_when_hovered_gui" value="false" />
        </node>

        <!-- rotation -->
        <node name="movement" type="Compose3DVector" />
        <node name="rotation" type="Multiply[VistaQuaternion]" />
        <node name="translation"   type="Compose3DVector" />


        <!-- yaw rotation -->
        <node name="orientation_invert" type="Invert[VistaQuaternion]"/>
        <node name="quaterionToEuler" type="QuaternionToEuler"/>
        <node name="deconstruct" type="Decompose3DVector"/>

        <node name="yaw" type="AxisRotate"/>
        <node name="yaw_angle" type="Multiply[float]"/>

        <node name="calibrate" type="Substract[float]"/>

        <node name="roll_absolute" type="Absolute[float]"/>
        <node name="roll_limited" type="Threshold[float]"/>
        
        <node name="roll_bool" type="LessEqual[float]"/> 
        <node name="roll_sign_invert_bool" type="Invert[bool]"/>
        <node name="roll_sign_null_one" type="TypeConvert[bool,float]"/> 
        <node name="roll_sign_multiply" type="Multiply[float]"/>   
        <node name="roll_sign" type="Substract[float]"/>  

        <node name="roll" type="Multiply[float]"/>      
        <!-- pitch rotaion  -->
        <node name="pitch_calibrate" type="Multiply[float]"/>      
        <node name="pitch" type="AxisRotate"/>

        <!-- speed -->
        <node name="key_speed_up" type="LatestUpdate[bool]"/>
        <node name="key_speed_down" type="LatestUpdate[bool]"/>

        <node name="convert_speed_up" type="TypeConvert[bool,float]"/>
        <node name="convert_speed_down" type="TypeConvert[bool,float]"/>

        <node name="delta_int_speed" type="Substract[float]"/>

        <node name="delta_absolut" type="Absolute[float]"/>

        <node name="delta_bool" type="TypeConvert[float,bool]"/>

        <node name="delta_multiplex" type="Multiplex[float]">
            <inport name="0" type="float"/>
            <inport name="1" type="float"/>
            <inport name="2" type="float"/>
            <inport name="3" type="float"/>
            <inport name="4" type="float"/>
            <inport name="5" type="float"/>
        </node>
        <node name="speed_level" type="Add[float]"/>

        <node name="observer_speed" type="ConstantValue[float]">
            <param name="value" value="-0.20"/>
        </node>

        <node name="clamp_high" type="Min[float]"/>
        <node name="clamp_low" type="Max[float]"/>

        <node name="speed_level_int" type="TypeConvert[float,int]"/>
        <node name="updated_speed" type="Multiply[float]"/>      

        <node name="last_speed_level" type="ConstantValue[float]">
            <param name="value" value="0.0" />
        </node>

        <!-- constant float values -->
         <node name="zero" type="ConstantValue[float]">
            <param name="value" value="0"/>
        </node>

        <node name="two" type="ConstantValue[float]">
            <param name="value" value="-2.0" />
        </node>

        <node name="minusOne" type="ConstantValue[float]">
            <param name="value" value="-1.0" />
        </node>

        <!-- setting values -->
        <node name="pitch_calibrate_value" type="ConstantValue[float]">
            <param name="value" value="0.1" />
        </node>

        <node name="yaw_angles_value" type="ConstantValue[float]">
            <param name="value" value="1.0" />
        </node>

        <node name="calibrate_value" type="ConstantValue[float]">
            <param name="value" value="-0.0" />
        </node>

         <node name="threshhold_value" type="ConstantValue[float]">
            <param name="value" value="0.0" />
        </node>

        <node name="roll_equal" type="ConstantValue[float]">
            <param name="value" value="0.0" />
        </node>

        <node name="yaw_axis" type="ConstantValue[VistaVector3D]">
            <param name="value" value="0,1,0,0" />
        </node>

        <node name="pitch_axis" type="ConstantValue[VistaVector3D]">
            <param name="value" value="1,0,0,0" />
        </node>

        <!-- speed values -->
        <node name="speed_level_0" type="ConstantValue[float]">
            <param name="value" value="0" />
        </node>

        <node name="speed_level_1" type="ConstantValue[float]">
            <param name="value" value="0.25" />
        </node>

         <node name="speed_level_2" type="ConstantValue[float]">
            <param name="value" value="0.5" />
        </node>

        <node name="speed_level_3" type="ConstantValue[float]">
            <param name="value" value="0.6" />
        </node>

        <node name="speed_level_4" type="ConstantValue[float]">
            <param name="value" value="0.7" />
        </node>      

        <node name="speed_level_5" type="ConstantValue[float]">
            <param name="value" value="2.0" />
        </node>
        
        <!-- clamp values -->
        <node name="clamp_low_value" type="ConstantValue[float]">
            <param name="value" value="0" />
        </node>
        <node name="clamp_high_value" type="ConstantValue[float]">
            <param name="value" value="5" />
        </node>

        <!-- debug text -->
        <node name="debug_text" type="SimpleText"/>
        
    </graph>

    <edges>

        <edge fromnode="icaros" tonode="history" fromport="history" toport="history" />
        <edge fromnode="sampling_mode" tonode="history" fromport="value" toport="sampling_mode" />
        <edge fromnode="history" tonode="orientation_invert" fromport="ORIENTATION" toport="in" />
        <!-- debug text history -->
        <edge fromnode="history" tonode="debug_text" fromport="ORIENTATION"  toport="history_Orientation" />

        <edge fromnode="orientation_invert" tonode="quaterionToEuler" fromport="out" toport="quaternion" />
        <edge fromnode="calibration" tonode="deconstruct" fromport="out" toport="in" />
        <!-- debug text calibartion -->

        <edge fromnode="deconstruct" tonode="pitch_calibrate" fromport="x"  toport="first" />
        <edge fromnode="pitch_calibrate_value" tonode="pitch_calibrate" fromport="value"  toport="second" />
        <edge fromnode="pitch_calibrate" tonode="pitch" fromport="out"  toport="angle" />
        <edge fromnode="pitch_axis" tonode="pitch" fromport="value"  toport="axis" />
        <!-- debug text movement -->


        <edge fromnode="deconstruct" tonode="calibrate" fromport="y" toport="first" />
        <edge fromnode="calibrate_value" tonode="calibrate" fromport="value" toport="second" />
        <edge fromnode="calibrate" tonode="roll_absolute" fromport="out" toport="in" />
        <edge fromnode="calibrate" tonode="roll_bool" fromport="out" toport="first" />
        <edge fromnode="zero" tonode="roll_bool" fromport="value" toport="second" />
        <edge fromnode="roll_bool" tonode="roll_sign_invert_bool" fromport="out" toport="in" />
        <edge fromnode="roll_sign_invert_bool" tonode="roll_sign_null_one" fromport="out" toport="in" />
        <edge fromnode="roll_sign_null_one" tonode="roll_sign_multiply" fromport="out" toport="first" />
        <edge fromnode="two" tonode="roll_sign_multiply" fromport="value" toport="second" />
        <edge fromnode="roll_sign_multiply" tonode="roll_sign" fromport="out" toport="first" />
        <edge fromnode="minusOne" tonode="roll_sign" fromport="value" toport="second" />
        <edge fromnode="roll_absolute" tonode="roll_limited" fromport="out" toport="in" />
        <edge fromnode="threshhold_value" tonode="roll_limited" fromport="value" toport="threshold" />
        <edge fromnode="roll_limited" tonode="roll" fromport="out" toport="first" />
        <edge fromnode="roll_sign" tonode="roll" fromport="out" toport="second" />
        <edge fromnode="roll" tonode="yaw_angle" fromport="out" toport="first" />
        <edge fromnode="yaw_angles_value" tonode="yaw_angle" fromport="value" toport="second" />
         <edge fromnode="yaw_angle" tonode="yaw" fromport="out" toport="angle" />
        <edge fromnode="yaw_axis" tonode="yaw" fromport="value" toport="axis" />
       <!-- debug text rolling to yaw -->
        <edge fromnode="yaw_angle" tonode="debug_text" fromport="out" toport="yaw_angle_value" />


        <edge fromnode="history" tonode="key_speed_up" fromport="BUTTON_2" toport="in_1" />
        <edge fromnode="history" tonode="key_speed_down" fromport="BUTTON_3" toport="in_1" />
        <edge fromnode="key_speed_up" tonode="convert_speed_up" fromport="out" toport="in" />
        <edge fromnode="key_speed_down" tonode="convert_speed_down" fromport="out" toport="in" />
        <edge fromnode="convert_speed_up" tonode="delta_int_speed" fromport="out" toport="first" />
        <edge fromnode="convert_speed_down" tonode="delta_int_speed" fromport="out" toport="second" />
        <edge fromnode="delta_int_speed" tonode="delta_absolut" fromport="out" toport="in" />
        <edge fromnode="delta_absolut" tonode="delta_bool" fromport="out" toport="in" /> 
        <edge fromnode="clamp_low_value" tonode="clamp_low" fromport="value"  toport="first" />
        <edge fromnode="clamp_high_value" tonode="clamp_high" fromport="value"  toport="first" />
        <edge fromnode="delta_int_speed" tonode="speed_level" fromport="out"  toport="second" />
        <edge fromnode="last_speed_level" tonode="speed_level" fromport="value"  toport="first" />
        <edge fromnode="speed_level" tonode="clamp_low" fromport="out"  toport="second" />
        <edge fromnode="clamp_low" tonode="clamp_high" fromport="out"  toport="second" />
        <edge fromnode="clamp_high" tonode="speed_level" fromport="out"  toport="first" />
        <edge fromnode="speed_level" tonode="speed_level_int" fromport="out"  toport="in" />
       <!-- debug text speedlevel /> -->
        <edge fromnode="speed_level" tonode="debug_text" fromport="out" toport="speed_level" />

        <edge fromnode="speed_level_int" tonode="delta_multiplex" fromport="out"  toport="select" />
        <edge fromnode="speed_level_0" tonode="delta_multiplex" fromport="value"  toport="0" />
        <edge fromnode="speed_level_1" tonode="delta_multiplex" fromport="value"  toport="1" />
        <edge fromnode="speed_level_2" tonode="delta_multiplex" fromport="value"  toport="2" />
        <edge fromnode="speed_level_3" tonode="delta_multiplex" fromport="value"  toport="3" />
        <edge fromnode="speed_level_4" tonode="delta_multiplex" fromport="value"  toport="4" />
        <edge fromnode="speed_level_5" tonode="delta_multiplex" fromport="value"  toport="5" />
        <edge fromnode="delta_multiplex" tonode="updated_speed" fromport="out" toport="second" />
        <edge fromnode="observer_speed" tonode="updated_speed" fromport="value" toport="first" />
        <!-- debug text speedlevel /> -->
        <edge fromnode="observer_speed" tonode="debug_text" fromport="value" toport="observer_speed" />
        <edge fromnode="delta_multiplex" tonode="debug_text" fromport="out" toport="delta_multiplex" />
        <edge fromnode="updated_speed" tonode="debug_text" fromport="out" toport="updated_speed" />


        <edge fromnode="key_calibrate" tonode="key_calibrate_LatestUpdate" fromport="state"  toport="in_1" />
        <edge fromnode="key_calibrate_LatestUpdate" tonode="calibration_condition" fromport="out"  toport="trigger" />
        <edge fromnode="quaterionToEuler" tonode="calibration_condition" fromport="out"  toport="euler" />
        <edge fromnode="calibration_condition" tonode="calibration" fromport="euler"  toport="second" />
        <edge fromnode="quaterionToEuler" tonode="calibration" fromport="out"  toport="first" />
        <!-- debug text speedlevel /> -->


        <edge fromnode="yaw" tonode="rotation" fromport="out" toport="first" />
        <edge fromnode="pitch" tonode="rotation" fromport="out" toport="second" />
        <edge fromnode="rotation" tonode="observer" fromport="out" toport="rotation" />
        <!-- debug text speedlevel /> -->


        <edge fromnode="zero" tonode="movement" fromport="value" toport="y" />
        <edge fromnode="zero" tonode="movement" fromport="value" toport="x" />
        <edge fromnode="updated_speed" tonode="movement" fromport="out"  toport="z" />
        <edge fromnode="movement" tonode="observer" fromport="out" toport="translation" />
        <edge fromnode="timer" tonode="observer" fromport="time" toport="time" />
        <!-- debug text speedlevel /> -->
        <edge fromnode="movement" tonode="debug_text" fromport="out" toport="translation" />

    </edges>
    
</module>
